%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, August 19, 2017 7:21:13 PM JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
174 174 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
174.000 0 l
174.000 174.000 l
0 174.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 174 174 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 164 164 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
25.0450 7.03618 127.898 134.963 rc
newpath
26.0450 9.03617 m
27.3066 9.03617 l
28.5681 9.18444 l
29.8297 9.46617 l
31.0913 9.86799 l
32.3529 10.3779 l
33.6145 10.9850 l
34.8761 11.6798 l
36.1377 12.4534 l
37.3993 13.2978 l
38.6609 14.2061 l
39.9225 15.1719 l
41.1841 16.1893 l
42.4457 17.2533 l
43.7073 18.3591 l
44.9689 19.5026 l
46.2305 20.6801 l
47.4921 21.8881 l
48.7537 23.1235 l
50.0153 24.3837 l
51.2769 25.6661 l
52.5385 26.9686 l
53.8001 28.2891 l
55.0617 29.6258 l
56.3233 30.9772 l
57.5849 32.3416 l
58.8465 33.7179 l
60.1081 35.1048 l
61.3697 36.5013 l
62.6313 37.9065 l
63.8929 39.3194 l
65.1545 40.7393 l
66.4160 42.1654 l
67.6776 43.5972 l
68.9392 45.0341 l
70.2008 46.4757 l
71.4624 47.9213 l
72.7240 49.3706 l
73.9856 50.8233 l
75.2472 52.2789 l
76.5088 53.7373 l
77.7704 55.1982 l
79.0320 56.6612 l
80.2936 58.1261 l
81.5552 59.5929 l
84.0784 62.5311 l
86.6016 65.4744 l
90.3864 69.8970 l
96.6944 77.2825 l
150.943 141.000 l
S
cliprestore
newpath
0 0 m
0 164.000 l
164.000 164.000 l
164.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
24.0450 143.000 m
150.943 143.000 l
S
Q
0 J
1 j
q
q
0 w
newpath
37.0000 143.000 m
37.0000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
35.7578 155.042 m
38.1748 153.863 l
38.4165 153.863 l
38.4165 162.249 l
38.4165 162.806 38.4397 163.152 38.4860 163.289  c
38.5324 163.426 38.6289 163.531 38.7753 163.604  c
38.9218 163.677 39.2197 163.719 39.6689 163.729  c
39.6689 164.000 l
35.9335 164.000 l
35.9335 163.729 l
36.4023 163.719 36.7050 163.679 36.8418 163.608  c
36.9785 163.537 37.0737 163.442 37.1274 163.322  c
37.1811 163.202 37.2080 162.845 37.2080 162.249  c
37.2080 156.888 l
37.2080 156.165 37.1835 155.701 37.1347 155.496  c
37.1005 155.340 37.0383 155.225 36.9480 155.152  c
36.8576 155.079 36.7490 155.042 36.6220 155.042  c
36.4414 155.042 36.1899 155.118 35.8676 155.269  c
h
42.5419 159.092 m
42.5419 157.960 42.7128 156.984 43.0546 156.166  c
43.3964 155.348 43.8505 154.739 44.4169 154.339  c
44.8564 154.022 45.3105 153.863 45.7793 153.863  c
46.5410 153.863 47.2246 154.251 47.8300 155.027  c
48.5869 155.989 48.9653 157.293 48.9653 158.939  c
48.9653 160.091 48.7993 161.070 48.4672 161.876  c
48.1352 162.681 47.7116 163.266 47.1965 163.630  c
46.6814 163.993 46.1845 164.175 45.7060 164.175  c
44.7587 164.175 43.9702 163.616 43.3403 162.498  c
42.8081 161.556 42.5419 160.420 42.5419 159.092  c
h
43.9775 159.275 m
43.9775 160.643 44.1460 161.758 44.4829 162.623  c
44.7612 163.350 45.1762 163.714 45.7280 163.714  c
45.9917 163.714 46.2651 163.595 46.5483 163.359  c
46.8315 163.122 47.0463 162.725 47.1928 162.168  c
47.4174 161.329 47.5297 160.145 47.5297 158.616  c
47.5297 157.483 47.4126 156.539 47.1782 155.782  c
47.0024 155.220 46.7753 154.822 46.4970 154.588  c
46.2968 154.427 46.0551 154.346 45.7719 154.346  c
45.4399 154.346 45.1445 154.495 44.8857 154.793  c
44.5341 155.198 44.2949 155.835 44.1679 156.705  c
44.0410 157.574 43.9775 158.431 43.9775 159.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
50.0000 143.000 m
50.0000 145.000 l
S
Q
q
0 w
newpath
63.0000 143.000 m
63.0000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
59.7617 155.958 m
60.0449 155.289 60.4025 154.772 60.8347 154.408  c
61.2668 154.045 61.8051 153.863 62.4497 153.863  c
63.2456 153.863 63.8559 154.122 64.2807 154.639  c
64.6030 155.025 64.7641 155.438 64.7641 155.877  c
64.7641 156.600 64.3100 157.347 63.4018 158.118  c
64.0122 158.357 64.4736 158.699 64.7861 159.144  c
65.0986 159.588 65.2548 160.110 65.2548 160.711  c
65.2548 161.570 64.9814 162.315 64.4345 162.945  c
63.7216 163.765 62.6889 164.175 61.3364 164.175  c
60.6674 164.175 60.2121 164.092 59.9704 163.926  c
59.7287 163.760 59.6079 163.582 59.6079 163.392  c
59.6079 163.250 59.6652 163.126 59.7800 163.018  c
59.8947 162.911 60.0327 162.857 60.1938 162.857  c
60.3159 162.857 60.4404 162.877 60.5673 162.916  c
60.6503 162.940 60.8383 163.029 61.1313 163.183  c
61.4243 163.337 61.6269 163.428 61.7392 163.458  c
61.9199 163.511 62.1127 163.538 62.3178 163.538  c
62.8159 163.538 63.2492 163.345 63.6179 162.960  c
63.9865 162.574 64.1709 162.117 64.1709 161.590  c
64.1709 161.204 64.0854 160.828 63.9145 160.462  c
63.7876 160.189 63.6484 159.981 63.4970 159.839  c
63.2871 159.644 62.9990 159.467 62.6328 159.308  c
62.2666 159.150 61.8930 159.070 61.5122 159.070  c
61.2778 159.070 l
61.2778 158.851 l
61.6635 158.802 62.0505 158.663 62.4387 158.433  c
62.8269 158.204 63.1088 157.928 63.2846 157.606  c
63.4604 157.283 63.5483 156.929 63.5483 156.543  c
63.5483 156.041 63.3908 155.634 63.0759 155.324  c
62.7609 155.014 62.3691 154.859 61.9003 154.859  c
61.1435 154.859 60.5112 155.264 60.0034 156.075  c
h
67.5419 159.092 m
67.5419 157.960 67.7128 156.984 68.0546 156.166  c
68.3964 155.348 68.8505 154.739 69.4169 154.339  c
69.8564 154.022 70.3105 153.863 70.7793 153.863  c
71.5410 153.863 72.2246 154.251 72.8300 155.027  c
73.5869 155.989 73.9653 157.293 73.9653 158.939  c
73.9653 160.091 73.7993 161.070 73.4672 161.876  c
73.1352 162.681 72.7116 163.266 72.1965 163.630  c
71.6814 163.993 71.1845 164.175 70.7060 164.175  c
69.7587 164.175 68.9702 163.616 68.3403 162.498  c
67.8081 161.556 67.5419 160.420 67.5419 159.092  c
h
68.9775 159.275 m
68.9775 160.643 69.1460 161.758 69.4829 162.623  c
69.7612 163.350 70.1762 163.714 70.7280 163.714  c
70.9917 163.714 71.2651 163.595 71.5483 163.359  c
71.8315 163.122 72.0463 162.725 72.1928 162.168  c
72.4174 161.329 72.5297 160.145 72.5297 158.616  c
72.5297 157.483 72.4126 156.539 72.1782 155.782  c
72.0024 155.220 71.7753 154.822 71.4970 154.588  c
71.2968 154.427 71.0551 154.346 70.7719 154.346  c
70.4399 154.346 70.1445 154.495 69.8857 154.793  c
69.5341 155.198 69.2949 155.835 69.1679 156.705  c
69.0410 157.574 68.9775 158.431 68.9775 159.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
75.0000 143.000 m
75.0000 145.000 l
S
Q
q
0 w
newpath
88.0000 143.000 m
88.0000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
90.5112 154.068 m
89.9399 155.313 l
86.9516 155.313 l
86.2998 156.646 l
87.5937 156.836 88.6191 157.317 89.3759 158.089  c
90.0253 158.753 90.3501 159.534 90.3501 160.433  c
90.3501 160.955 90.2439 161.439 90.0314 161.883  c
89.8190 162.327 89.5517 162.706 89.2294 163.018  c
88.9072 163.331 88.5483 163.582 88.1528 163.772  c
87.5913 164.041 87.0151 164.175 86.4243 164.175  c
85.8286 164.175 85.3952 164.074 85.1242 163.871  c
84.8532 163.669 84.7177 163.445 84.7177 163.201  c
84.7177 163.064 84.7739 162.944 84.8862 162.839  c
84.9985 162.734 85.1401 162.681 85.3110 162.681  c
85.4379 162.681 85.5490 162.701 85.6442 162.740  c
85.7395 162.779 85.9018 162.879 86.1313 163.040  c
86.4975 163.294 86.8686 163.421 87.2446 163.421  c
87.8159 163.421 88.3176 163.205 88.7497 162.773  c
89.1818 162.341 89.3979 161.814 89.3979 161.194  c
89.3979 160.594 89.2050 160.033 88.8193 159.513  c
88.4335 158.993 87.9013 158.592 87.2226 158.309  c
86.6904 158.089 85.9653 157.962 85.0473 157.928  c
86.9516 154.068 l
h
92.5419 159.092 m
92.5419 157.960 92.7128 156.984 93.0546 156.166  c
93.3964 155.348 93.8505 154.739 94.4169 154.339  c
94.8564 154.022 95.3105 153.863 95.7793 153.863  c
96.5410 153.863 97.2246 154.251 97.8300 155.027  c
98.5869 155.989 98.9653 157.293 98.9653 158.939  c
98.9653 160.091 98.7993 161.070 98.4672 161.876  c
98.1352 162.681 97.7116 163.266 97.1965 163.630  c
96.6814 163.993 96.1845 164.175 95.7060 164.175  c
94.7587 164.175 93.9702 163.616 93.3403 162.498  c
92.8081 161.556 92.5419 160.420 92.5419 159.092  c
h
93.9775 159.275 m
93.9775 160.643 94.1460 161.758 94.4829 162.623  c
94.7612 163.350 95.1762 163.714 95.7280 163.714  c
95.9917 163.714 96.2651 163.595 96.5483 163.359  c
96.8315 163.122 97.0463 162.725 97.1928 162.168  c
97.4174 161.329 97.5297 160.145 97.5297 158.616  c
97.5297 157.483 97.4126 156.539 97.1782 155.782  c
97.0024 155.220 96.7753 154.822 96.4970 154.588  c
96.2968 154.427 96.0551 154.346 95.7719 154.346  c
95.4399 154.346 95.1445 154.495 94.8857 154.793  c
94.5341 155.198 94.2949 155.835 94.1679 156.705  c
94.0410 157.574 93.9775 158.431 93.9775 159.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
100.000 143.000 m
100.000 145.000 l
S
Q
q
0 w
newpath
113.000 143.000 m
113.000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
111.508 154.068 m
116.833 154.068 l
116.833 154.346 l
113.522 164.205 l
112.702 164.205 l
115.668 155.262 l
112.937 155.262 l
112.385 155.262 111.992 155.328 111.757 155.460  c
111.347 155.684 111.018 156.031 110.769 156.500  c
110.556 156.419 l
h
118.542 159.092 m
118.542 157.960 118.712 156.984 119.054 156.166  c
119.396 155.348 119.850 154.739 120.417 154.339  c
120.856 154.022 121.310 153.863 121.779 153.863  c
122.541 153.863 123.224 154.251 123.830 155.027  c
124.586 155.989 124.965 157.293 124.965 158.939  c
124.965 160.091 124.799 161.070 124.467 161.876  c
124.135 162.681 123.711 163.266 123.196 163.630  c
122.681 163.993 122.184 164.175 121.706 164.175  c
120.758 164.175 119.970 163.616 119.340 162.498  c
118.808 161.556 118.542 160.420 118.542 159.092  c
h
119.977 159.275 m
119.977 160.643 120.146 161.758 120.482 162.623  c
120.761 163.350 121.176 163.714 121.728 163.714  c
121.991 163.714 122.265 163.595 122.548 163.359  c
122.831 163.122 123.046 162.725 123.192 162.168  c
123.417 161.329 123.529 160.145 123.529 158.616  c
123.529 157.483 123.412 156.539 123.178 155.782  c
123.002 155.220 122.775 154.822 122.497 154.588  c
122.296 154.427 122.055 154.346 121.772 154.346  c
121.439 154.346 121.144 154.495 120.885 154.793  c
120.534 155.198 120.294 155.835 120.168 156.705  c
120.041 157.574 119.977 158.431 119.977 159.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
126.000 143.000 m
126.000 145.000 l
S
Q
q
0 w
newpath
138.000 143.000 m
138.000 145.000 l
S
Q
q
0 w
newpath
151.000 143.000 m
151.000 145.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
144.757 155.042 m
147.174 153.863 l
147.416 153.863 l
147.416 162.249 l
147.416 162.806 147.439 163.152 147.486 163.289  c
147.532 163.426 147.628 163.531 147.775 163.604  c
147.921 163.677 148.219 163.719 148.668 163.729  c
148.668 164.000 l
144.933 164.000 l
144.933 163.729 l
145.402 163.719 145.705 163.679 145.841 163.608  c
145.978 163.537 146.073 163.442 146.127 163.322  c
146.181 163.202 146.208 162.845 146.208 162.249  c
146.208 156.888 l
146.208 156.165 146.183 155.701 146.134 155.496  c
146.100 155.340 146.038 155.225 145.948 155.152  c
145.857 155.079 145.749 155.042 145.622 155.042  c
145.441 155.042 145.189 155.118 144.867 155.269  c
h
151.542 159.092 m
151.542 157.960 151.712 156.984 152.054 156.166  c
152.396 155.348 152.850 154.739 153.417 154.339  c
153.856 154.022 154.310 153.863 154.779 153.863  c
155.541 153.863 156.224 154.251 156.830 155.027  c
157.586 155.989 157.965 157.293 157.965 158.939  c
157.965 160.091 157.799 161.070 157.467 161.876  c
157.135 162.681 156.711 163.266 156.196 163.630  c
155.681 163.993 155.184 164.175 154.706 164.175  c
153.758 164.175 152.970 163.616 152.340 162.498  c
151.808 161.556 151.542 160.420 151.542 159.092  c
h
152.977 159.275 m
152.977 160.643 153.146 161.758 153.482 162.623  c
153.761 163.350 154.176 163.714 154.728 163.714  c
154.991 163.714 155.265 163.595 155.548 163.359  c
155.831 163.122 156.046 162.725 156.192 162.168  c
156.417 161.329 156.529 160.145 156.529 158.616  c
156.529 157.483 156.412 156.539 156.178 155.782  c
156.002 155.220 155.775 154.822 155.497 154.588  c
155.296 154.427 155.055 154.346 154.772 154.346  c
154.439 154.346 154.144 154.495 153.885 154.793  c
153.534 155.198 153.294 155.835 153.168 156.705  c
153.041 157.574 152.977 158.431 152.977 159.275  c
h
159.542 159.092 m
159.542 157.960 159.712 156.984 160.054 156.166  c
160.396 155.348 160.850 154.739 161.417 154.339  c
161.856 154.022 162.310 153.863 162.779 153.863  c
163.541 153.863 164.224 154.251 164.830 155.027  c
165.586 155.989 165.965 157.293 165.965 158.939  c
165.965 160.091 165.799 161.070 165.467 161.876  c
165.135 162.681 164.711 163.266 164.196 163.630  c
163.681 163.993 163.184 164.175 162.706 164.175  c
161.758 164.175 160.970 163.616 160.340 162.498  c
159.808 161.556 159.542 160.420 159.542 159.092  c
h
160.977 159.275 m
160.977 160.643 161.146 161.758 161.482 162.623  c
161.761 163.350 162.176 163.714 162.728 163.714  c
162.991 163.714 163.265 163.595 163.548 163.359  c
163.831 163.122 164.046 162.725 164.192 162.168  c
164.417 161.329 164.529 160.145 164.529 158.616  c
164.529 157.483 164.412 156.539 164.178 155.782  c
164.002 155.220 163.775 154.822 163.497 154.588  c
163.296 154.427 163.055 154.346 162.772 154.346  c
162.439 154.346 162.144 154.495 161.885 154.793  c
161.534 155.198 161.294 155.835 161.168 156.705  c
161.041 157.574 160.977 158.431 160.977 159.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.0000 143.000 m
31.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.0000 143.000 m
44.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
56.0000 143.000 m
56.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
69.0000 143.000 m
69.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
82.0000 143.000 m
82.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
94.0000 143.000 m
94.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
107.000 143.000 m
107.000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
119.000 143.000 m
119.000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
132.000 143.000 m
132.000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
145.000 143.000 m
145.000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
24.0000 143.000 m
24.0000 9.03617 l
S
Q
0 J
1 j
q
q
0 w
newpath
24.0000 128.000 m
22.0000 128.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.79101 138.205 m
6.79101 137.934 l
7.42578 137.924 8.01660 137.776 8.56347 137.491  c
9.11035 137.205 9.63891 136.706 10.1491 135.993  c
10.6594 135.280 11.0146 134.496 11.2148 133.642  c
10.4482 134.135 9.75488 134.381 9.13476 134.381  c
8.43652 134.381 7.83837 134.112 7.34033 133.572  c
6.84228 133.033 6.59326 132.316 6.59326 131.422  c
6.59326 130.553 6.84228 129.779 7.34033 129.101  c
7.94091 128.275 8.72460 127.863 9.69140 127.863  c
10.5068 127.863 11.2050 128.200 11.7861 128.874  c
12.4990 129.709 12.8554 130.739 12.8554 131.964  c
12.8554 133.068 12.5844 134.097 12.0424 135.052  c
11.5004 136.006 10.7460 136.798 9.77929 137.428  c
8.99316 137.946 8.13623 138.205 7.20849 138.205  c
h
11.3320 133.100 m
11.4199 132.465 11.4638 131.957 11.4638 131.576  c
11.4638 131.103 11.3833 130.591 11.2221 130.042  c
11.0610 129.492 10.8327 129.071 10.5373 128.778  c
10.2419 128.485 9.90625 128.339 9.53027 128.339  c
9.09570 128.339 8.71484 128.534 8.38769 128.925  c
8.06054 129.315 7.89697 129.897 7.89697 130.668  c
7.89697 131.698 8.11425 132.504 8.54882 133.085  c
8.86621 133.505 9.25683 133.715 9.72070 133.715  c
9.94531 133.715 10.2114 133.661 10.5190 133.554  c
10.8266 133.446 11.0976 133.295 11.3320 133.100  c
h
15.8750 136.579 m
16.1044 136.579 16.2973 136.658 16.4536 136.817  c
16.6098 136.975 16.6879 137.167 16.6879 137.392  c
16.6879 137.616 16.6086 137.808 16.4499 137.967  c
16.2912 138.125 16.0996 138.205 15.8750 138.205  c
15.6503 138.205 15.4587 138.125 15.3000 137.967  c
15.1413 137.808 15.0620 137.616 15.0620 137.392  c
15.0620 137.162 15.1413 136.969 15.3000 136.813  c
15.4587 136.657 15.6503 136.579 15.8750 136.579  c
h
24.8774 136.088 m
24.1816 138.000 l
18.3222 138.000 l
18.3222 137.729 l
20.0459 136.156 21.2592 134.872 21.9624 133.876  c
22.6655 132.880 23.0170 131.969 23.0170 131.144  c
23.0170 130.514 22.8242 129.997 22.4384 129.591  c
22.0527 129.186 21.5913 128.983 21.0542 128.983  c
20.5659 128.983 20.1276 129.126 19.7395 129.412  c
19.3513 129.698 19.0644 130.116 18.8789 130.668  c
18.6079 130.668 l
18.7299 129.765 19.0437 129.071 19.5490 128.588  c
20.0544 128.105 20.6855 127.863 21.4423 127.863  c
22.2480 127.863 22.9206 128.122 23.4602 128.639  c
23.9997 129.157 24.2695 129.767 24.2695 130.470  c
24.2695 130.973 24.1523 131.476 23.9179 131.979  c
23.5566 132.770 22.9707 133.607 22.1601 134.491  c
20.9443 135.819 20.1850 136.620 19.8823 136.894  c
22.4751 136.894 l
23.0024 136.894 23.3723 136.874 23.5847 136.835  c
23.7971 136.796 23.9887 136.717 24.1596 136.597  c
24.3305 136.477 24.4794 136.308 24.6064 136.088  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 113.000 m
22.0000 113.000 l
S
Q
q
0 w
newpath
24.0000 98.0000 m
22.0000 98.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.79101 109.205 m
6.79101 108.934 l
7.42578 108.924 8.01660 108.776 8.56347 108.491  c
9.11035 108.205 9.63891 107.706 10.1491 106.993  c
10.6594 106.280 11.0146 105.496 11.2148 104.642  c
10.4482 105.135 9.75488 105.381 9.13476 105.381  c
8.43652 105.381 7.83837 105.112 7.34033 104.572  c
6.84228 104.033 6.59326 103.316 6.59326 102.422  c
6.59326 101.553 6.84228 100.779 7.34033 100.101  c
7.94091 99.2758 8.72460 98.8632 9.69140 98.8632  c
10.5068 98.8632 11.2050 99.2002 11.7861 99.8740  c
12.4990 100.709 12.8554 101.739 12.8554 102.964  c
12.8554 104.068 12.5844 105.097 12.0424 106.052  c
11.5004 107.006 10.7460 107.798 9.77929 108.428  c
8.99316 108.946 8.13623 109.205 7.20849 109.205  c
h
11.3320 104.100 m
11.4199 103.465 11.4638 102.957 11.4638 102.576  c
11.4638 102.103 11.3833 101.591 11.2221 101.042  c
11.0610 100.492 10.8327 100.071 10.5373 99.7788  c
10.2419 99.4858 9.90625 99.3393 9.53027 99.3393  c
9.09570 99.3393 8.71484 99.5346 8.38769 99.9252  c
8.06054 100.315 7.89697 100.897 7.89697 101.668  c
7.89697 102.698 8.11425 103.504 8.54882 104.085  c
8.86621 104.505 9.25683 104.715 9.72070 104.715  c
9.94531 104.715 10.2114 104.661 10.5190 104.554  c
10.8266 104.446 11.0976 104.295 11.3320 104.100  c
h
15.8750 107.579 m
16.1044 107.579 16.2973 107.658 16.4536 107.817  c
16.6098 107.975 16.6879 108.167 16.6879 108.392  c
16.6879 108.616 16.6086 108.808 16.4499 108.967  c
16.2912 109.125 16.0996 109.205 15.8750 109.205  c
15.6503 109.205 15.4587 109.125 15.3000 108.967  c
15.1413 108.808 15.0620 108.616 15.0620 108.392  c
15.0620 108.162 15.1413 107.969 15.3000 107.813  c
15.4587 107.657 15.6503 107.579 15.8750 107.579  c
h
24.9799 105.337 m
24.9799 106.377 l
23.6469 106.377 l
23.6469 109.000 l
22.4384 109.000 l
22.4384 106.377 l
18.2343 106.377 l
18.2343 105.440 l
22.8413 98.8632 l
23.6469 98.8632 l
23.6469 105.337 l
h
22.4384 105.337 m
22.4384 100.408 l
18.9521 105.337 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 83.0000 m
22.0000 83.0000 l
S
Q
q
0 w
newpath
24.0000 68.0000 m
22.0000 68.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.79101 79.2050 m
6.79101 78.9340 l
7.42578 78.9243 8.01660 78.7766 8.56347 78.4909  c
9.11035 78.2053 9.63891 77.7060 10.1491 76.9931  c
10.6594 76.2802 11.0146 75.4965 11.2148 74.6420  c
10.4482 75.1352 9.75488 75.3818 9.13476 75.3818  c
8.43652 75.3818 7.83837 75.1120 7.34033 74.5725  c
6.84228 74.0329 6.59326 73.3164 6.59326 72.4228  c
6.59326 71.5537 6.84228 70.7797 7.34033 70.1010  c
7.94091 69.2758 8.72460 68.8632 9.69140 68.8632  c
10.5068 68.8632 11.2050 69.2002 11.7861 69.8740  c
12.4990 70.7089 12.8554 71.7392 12.8554 72.9648  c
12.8554 74.0683 12.5844 75.0974 12.0424 76.0520  c
11.5004 77.0065 10.7460 77.7988 9.77929 78.4287  c
8.99316 78.9462 8.13623 79.2050 7.20849 79.2050  c
h
11.3320 74.1001 m
11.4199 73.4653 11.4638 72.9575 11.4638 72.5766  c
11.4638 72.1030 11.3833 71.5915 11.2221 71.0422  c
11.0610 70.4929 10.8327 70.0717 10.5373 69.7788  c
10.2419 69.4858 9.90625 69.3393 9.53027 69.3393  c
9.09570 69.3393 8.71484 69.5346 8.38769 69.9252  c
8.06054 70.3159 7.89697 70.8969 7.89697 71.6684  c
7.89697 72.6987 8.11425 73.5043 8.54882 74.0854  c
8.86621 74.5053 9.25683 74.7153 9.72070 74.7153  c
9.94531 74.7153 10.2114 74.6616 10.5190 74.5542  c
10.8266 74.4467 11.0976 74.2954 11.3320 74.1001  c
h
15.8750 77.5791 m
16.1044 77.5791 16.2973 77.6584 16.4536 77.8171  c
16.6098 77.9758 16.6879 78.1674 16.6879 78.3920  c
16.6879 78.6167 16.6086 78.8083 16.4499 78.9670  c
16.2912 79.1257 16.0996 79.2050 15.8750 79.2050  c
15.6503 79.2050 15.4587 79.1257 15.3000 78.9670  c
15.1413 78.8083 15.0620 78.6167 15.0620 78.3920  c
15.0620 78.1626 15.1413 77.9697 15.3000 77.8134  c
15.4587 77.6572 15.6503 77.5791 15.8750 77.5791  c
h
24.7236 68.8632 m
24.7236 69.1342 l
24.0791 69.1977 23.5529 69.3259 23.1452 69.5188  c
22.7375 69.7116 22.3347 70.0058 21.9367 70.4013  c
21.5388 70.7968 21.2092 71.2375 20.9480 71.7233  c
20.6867 72.2092 20.4682 72.7866 20.2924 73.4555  c
20.9956 72.9721 21.7011 72.7304 22.4091 72.7304  c
23.0878 72.7304 23.6762 73.0039 24.1743 73.5507  c
24.6723 74.0976 24.9213 74.8007 24.9213 75.6601  c
24.9213 76.4902 24.6699 77.2470 24.1669 77.9306  c
23.5615 78.7607 22.7607 79.1757 21.7646 79.1757  c
21.0859 79.1757 20.5097 78.9511 20.0361 78.5019  c
19.1084 77.6279 18.6445 76.4951 18.6445 75.1035  c
18.6445 74.2148 18.8227 73.3701 19.1792 72.5693  c
19.5356 71.7685 20.0446 71.0581 20.7063 70.4379  c
21.3679 69.8178 22.0014 69.4003 22.6069 69.1855  c
23.2124 68.9707 23.7763 68.8632 24.2988 68.8632  c
h
20.1679 73.9902 m
20.0800 74.6494 20.0361 75.1816 20.0361 75.5869  c
20.0361 76.0556 20.1228 76.5647 20.2961 77.1140  c
20.4694 77.6633 20.7270 78.0991 21.0688 78.4213  c
21.3178 78.6508 21.6206 78.7656 21.9770 78.7656  c
22.4018 78.7656 22.7814 78.5654 23.1159 78.1650  c
23.4504 77.7646 23.6176 77.1933 23.6176 76.4511  c
23.6176 75.6162 23.4516 74.8935 23.1196 74.2832  c
22.7876 73.6728 22.3164 73.3676 21.7060 73.3676  c
21.5205 73.3676 21.3215 73.4067 21.1091 73.4848  c
20.8967 73.5629 20.5830 73.7314 20.1679 73.9902  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 54.0000 m
22.0000 54.0000 l
S
Q
q
0 w
newpath
24.0000 39.0000 m
22.0000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.79101 49.2050 m
6.79101 48.9340 l
7.42578 48.9243 8.01660 48.7766 8.56347 48.4909  c
9.11035 48.2053 9.63891 47.7060 10.1491 46.9931  c
10.6594 46.2802 11.0146 45.4965 11.2148 44.6420  c
10.4482 45.1352 9.75488 45.3818 9.13476 45.3818  c
8.43652 45.3818 7.83837 45.1120 7.34033 44.5725  c
6.84228 44.0329 6.59326 43.3164 6.59326 42.4228  c
6.59326 41.5537 6.84228 40.7797 7.34033 40.1010  c
7.94091 39.2758 8.72460 38.8632 9.69140 38.8632  c
10.5068 38.8632 11.2050 39.2002 11.7861 39.8740  c
12.4990 40.7089 12.8554 41.7392 12.8554 42.9648  c
12.8554 44.0683 12.5844 45.0974 12.0424 46.0520  c
11.5004 47.0065 10.7460 47.7988 9.77929 48.4287  c
8.99316 48.9462 8.13623 49.2050 7.20849 49.2050  c
h
11.3320 44.1001 m
11.4199 43.4653 11.4638 42.9575 11.4638 42.5766  c
11.4638 42.1030 11.3833 41.5915 11.2221 41.0422  c
11.0610 40.4929 10.8327 40.0717 10.5373 39.7788  c
10.2419 39.4858 9.90625 39.3393 9.53027 39.3393  c
9.09570 39.3393 8.71484 39.5346 8.38769 39.9252  c
8.06054 40.3159 7.89697 40.8969 7.89697 41.6684  c
7.89697 42.6987 8.11425 43.5043 8.54882 44.0854  c
8.86621 44.5053 9.25683 44.7153 9.72070 44.7153  c
9.94531 44.7153 10.2114 44.6616 10.5190 44.5542  c
10.8266 44.4467 11.0976 44.2954 11.3320 44.1001  c
h
15.8750 47.5791 m
16.1044 47.5791 16.2973 47.6584 16.4536 47.8171  c
16.6098 47.9758 16.6879 48.1674 16.6879 48.3920  c
16.6879 48.6167 16.6086 48.8083 16.4499 48.9670  c
16.2912 49.1257 16.0996 49.2050 15.8750 49.2050  c
15.6503 49.2050 15.4587 49.1257 15.3000 48.9670  c
15.1413 48.8083 15.0620 48.6167 15.0620 48.3920  c
15.0620 48.1626 15.1413 47.9697 15.3000 47.8134  c
15.4587 47.6572 15.6503 47.5791 15.8750 47.5791  c
h
20.8784 43.9975 m
20.0922 43.3530 19.5856 42.8354 19.3586 42.4448  c
19.1315 42.0542 19.0180 41.6489 19.0180 41.2290  c
19.0180 40.5844 19.2670 40.0290 19.7651 39.5627  c
20.2631 39.0964 20.9248 38.8632 21.7500 38.8632  c
22.5507 38.8632 23.1953 39.0805 23.6835 39.5151  c
24.1718 39.9497 24.4160 40.4453 24.4160 41.0019  c
24.4160 41.3730 24.2841 41.7514 24.0205 42.1372  c
23.7568 42.5229 23.2075 42.9770 22.3725 43.4995  c
23.2319 44.1635 23.8007 44.6860 24.0791 45.0668  c
24.4502 45.5649 24.6357 46.0898 24.6357 46.6416  c
24.6357 47.3398 24.3696 47.9367 23.8374 48.4323  c
23.3051 48.9279 22.6069 49.1757 21.7426 49.1757  c
20.8002 49.1757 20.0654 48.8803 19.5380 48.2895  c
19.1181 47.8159 18.9082 47.2983 18.9082 46.7368  c
18.9082 46.2973 19.0559 45.8615 19.3513 45.4294  c
19.6467 44.9973 20.1557 44.5200 20.8784 43.9975  c
h
22.0283 43.2138 m
22.6142 42.6865 22.9853 42.2702 23.1416 41.9650  c
23.2978 41.6599 23.3759 41.3144 23.3759 40.9287  c
23.3759 40.4160 23.2319 40.0144 22.9438 39.7238  c
22.6557 39.4333 22.2627 39.2880 21.7646 39.2880  c
21.2666 39.2880 20.8613 39.4321 20.5488 39.7202  c
20.2363 40.0083 20.0800 40.3452 20.0800 40.7309  c
20.0800 40.9848 20.1447 41.2387 20.2741 41.4926  c
20.4035 41.7465 20.5878 41.9882 20.8271 42.2177  c
h
21.2226 44.2758 m
20.8173 44.6176 20.5170 44.9899 20.3217 45.3928  c
20.1264 45.7956 20.0288 46.2314 20.0288 46.7002  c
20.0288 47.3300 20.2009 47.8342 20.5451 48.2126  c
20.8894 48.5910 21.3276 48.7802 21.8598 48.7802  c
22.3872 48.7802 22.8095 48.6313 23.1269 48.3335  c
23.4443 48.0356 23.6030 47.6743 23.6030 47.2495  c
23.6030 46.8979 23.5102 46.5830 23.3247 46.3046  c
22.9780 45.7871 22.2773 45.1108 21.2226 44.2758  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 24.0000 m
22.0000 24.0000 l
S
Q
q
0 w
newpath
24.0000 9.00000 m
22.0000 9.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.7578 11.0424 m
14.1748 9.86328 l
14.4165 9.86328 l
14.4165 18.2495 l
14.4165 18.8061 14.4397 19.1528 14.4860 19.2895  c
14.5324 19.4262 14.6289 19.5312 14.7753 19.6044  c
14.9218 19.6777 15.2197 19.7192 15.6689 19.7290  c
15.6689 20.0000 l
11.9335 20.0000 l
11.9335 19.7290 l
12.4023 19.7192 12.7050 19.6789 12.8418 19.6081  c
12.9785 19.5373 13.0737 19.4421 13.1274 19.3225  c
13.1811 19.2028 13.2080 18.8452 13.2080 18.2495  c
13.2080 12.8881 l
13.2080 12.1655 13.1835 11.7016 13.1347 11.4965  c
13.1005 11.3403 13.0383 11.2255 12.9480 11.1523  c
12.8576 11.0791 12.7490 11.0424 12.6220 11.0424  c
12.4414 11.0424 12.1899 11.1181 11.8676 11.2695  c
h
18.5419 15.0927 m
18.5419 13.9599 18.7128 12.9846 19.0546 12.1667  c
19.3964 11.3488 19.8505 10.7397 20.4169 10.3393  c
20.8564 10.0219 21.3105 9.86328 21.7793 9.86328  c
22.5410 9.86328 23.2246 10.2514 23.8300 11.0278  c
24.5869 11.9897 24.9653 13.2934 24.9653 14.9389  c
24.9653 16.0913 24.7993 17.0703 24.4672 17.8759  c
24.1352 18.6816 23.7116 19.2663 23.1965 19.6301  c
22.6814 19.9939 22.1845 20.1757 21.7060 20.1757  c
20.7587 20.1757 19.9702 19.6167 19.3403 18.4985  c
18.8081 17.5561 18.5419 16.4209 18.5419 15.0927  c
h
19.9775 15.2758 m
19.9775 16.6430 20.1460 17.7587 20.4829 18.6230  c
20.7612 19.3505 21.1762 19.7143 21.7280 19.7143  c
21.9917 19.7143 22.2651 19.5959 22.5483 19.3591  c
22.8315 19.1223 23.0463 18.7255 23.1928 18.1689  c
23.4174 17.3291 23.5297 16.1450 23.5297 14.6167  c
23.5297 13.4838 23.4126 12.5390 23.1782 11.7822  c
23.0024 11.2207 22.7753 10.8227 22.4970 10.5883  c
22.2968 10.4272 22.0551 10.3466 21.7719 10.3466  c
21.4399 10.3466 21.1445 10.4956 20.8857 10.7934  c
20.5341 11.1987 20.2949 11.8359 20.1679 12.7050  c
20.0410 13.5742 19.9775 14.4311 19.9775 15.2758  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 135.000 m
23.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 120.000 m
23.0000 120.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 105.000 m
23.0000 105.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 91.0000 m
23.0000 91.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 76.0000 m
23.0000 76.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 61.0000 m
23.0000 61.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 46.0000 m
23.0000 46.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 31.0000 m
23.0000 31.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
24.0000 16.0000 m
23.0000 16.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 174 174 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
