%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2017年12月1日 13時57分33秒 JST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
0 0 1.00000 RG
42.0000 -1.00000 349.000 390.000 rc
newpath
43.0000 1.00000 m
50.0612 1.00000 l
57.1224 1.32907 l
64.1836 1.98724 l
71.2449 2.97448 l
78.3061 4.29080 l
85.3673 5.93621 l
92.4285 7.91070 l
99.4897 10.2142 l
106.551 12.8469 l
113.612 15.8086 l
120.673 19.0994 l
127.734 22.7193 l
134.795 26.6683 l
141.857 30.9464 l
148.918 35.5535 l
155.979 40.4898 l
163.040 45.7551 l
170.102 51.3494 l
177.163 57.2729 l
184.224 63.5255 l
191.285 70.1071 l
198.346 77.0178 l
205.408 84.2576 l
212.469 91.8265 l
219.530 99.7244 l
226.591 107.951 l
233.653 116.507 l
240.714 125.392 l
247.775 134.607 l
254.836 144.150 l
261.897 154.022 l
268.959 164.224 l
276.020 174.755 l
283.081 185.614 l
290.142 196.803 l
297.204 208.321 l
304.265 220.168 l
311.326 232.344 l
318.387 244.849 l
325.449 257.683 l
332.510 270.846 l
339.571 284.339 l
346.632 298.160 l
353.693 312.311 l
360.755 326.790 l
367.816 341.599 l
374.877 356.737 l
381.938 372.204 l
389.000 388.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 0 0 RG
42.0000 -1.00000 349.000 390.000 rc
newpath
43.0000 34.5797 m
389.000 195.829 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
43.0000 35.0000 m
389.000 35.0000 l
S
Q
0 J
1 j
q
q
0 w
newpath
43.0000 35.0000 m
43.0000 39.0000 l
S
Q
q
0 w
newpath
114.000 35.0000 m
114.000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
115.757 50.0424 m
118.174 48.8632 l
118.416 48.8632 l
118.416 57.2495 l
118.416 57.8061 118.439 58.1528 118.486 58.2895  c
118.532 58.4262 118.628 58.5312 118.775 58.6044  c
118.921 58.6777 119.219 58.7192 119.668 58.7290  c
119.668 59.0000 l
115.933 59.0000 l
115.933 58.7290 l
116.402 58.7192 116.705 58.6789 116.841 58.6081  c
116.978 58.5373 117.073 58.4421 117.127 58.3225  c
117.181 58.2028 117.208 57.8452 117.208 57.2495  c
117.208 51.8881 l
117.208 51.1655 117.183 50.7016 117.134 50.4965  c
117.100 50.3403 117.038 50.2255 116.948 50.1523  c
116.857 50.0791 116.749 50.0424 116.622 50.0424  c
116.441 50.0424 116.189 50.1181 115.867 50.2695  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
184.000 35.0000 m
184.000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.877 57.0883 m
191.181 59.0000 l
185.322 59.0000 l
185.322 58.7290 l
187.045 57.1567 188.259 55.8725 188.962 54.8764  c
189.665 53.8803 190.017 52.9697 190.017 52.1445  c
190.017 51.5146 189.824 50.9970 189.438 50.5918  c
189.052 50.1865 188.591 49.9838 188.054 49.9838  c
187.565 49.9838 187.127 50.1267 186.739 50.4123  c
186.351 50.6980 186.064 51.1167 185.878 51.6684  c
185.607 51.6684 l
185.730 50.7651 186.043 50.0717 186.549 49.5883  c
187.054 49.1049 187.685 48.8632 188.442 48.8632  c
189.248 48.8632 189.920 49.1220 190.460 49.6396  c
190.999 50.1572 191.269 50.7675 191.269 51.4707  c
191.269 51.9736 191.152 52.4765 190.918 52.9794  c
190.556 53.7705 189.970 54.6079 189.160 55.4917  c
187.944 56.8198 187.185 57.6206 186.882 57.8940  c
189.475 57.8940 l
190.002 57.8940 190.372 57.8745 190.584 57.8354  c
190.797 57.7963 190.988 57.7170 191.159 57.5974  c
191.330 57.4777 191.479 57.3081 191.606 57.0883  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
255.000 35.0000 m
255.000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
255.761 50.9580 m
256.044 50.2890 256.402 49.7727 256.834 49.4089  c
257.266 49.0451 257.805 48.8632 258.449 48.8632  c
259.245 48.8632 259.856 49.1220 260.280 49.6396  c
260.603 50.0253 260.764 50.4379 260.764 50.8774  c
260.764 51.6001 260.310 52.3471 259.401 53.1186  c
260.012 53.3579 260.473 53.6997 260.786 54.1440  c
261.098 54.5883 261.254 55.1108 261.254 55.7114  c
261.254 56.5708 260.981 57.3154 260.434 57.9453  c
259.721 58.7656 258.689 59.1757 257.336 59.1757  c
256.667 59.1757 256.212 59.0927 255.970 58.9267  c
255.728 58.7607 255.607 58.5825 255.607 58.3920  c
255.607 58.2504 255.665 58.1259 255.780 58.0185  c
255.894 57.9111 256.032 57.8574 256.193 57.8574  c
256.315 57.8574 256.440 57.8769 256.567 57.9160  c
256.650 57.9404 256.838 58.0295 257.131 58.1833  c
257.424 58.3371 257.627 58.4287 257.739 58.4580  c
257.919 58.5117 258.112 58.5385 258.317 58.5385  c
258.815 58.5385 259.249 58.3457 259.617 57.9599  c
259.986 57.5742 260.170 57.1176 260.170 56.5903  c
260.170 56.2045 260.085 55.8286 259.914 55.4624  c
259.787 55.1889 259.648 54.9814 259.497 54.8398  c
259.287 54.6445 258.999 54.4675 258.632 54.3088  c
258.266 54.1501 257.893 54.0708 257.512 54.0708  c
257.277 54.0708 l
257.277 53.8510 l
257.663 53.8022 258.050 53.6630 258.438 53.4335  c
258.826 53.2041 259.108 52.9282 259.284 52.6059  c
259.460 52.2836 259.548 51.9296 259.548 51.5439  c
259.548 51.0410 259.390 50.6345 259.075 50.3244  c
258.761 50.0144 258.369 49.8593 257.900 49.8593  c
257.143 49.8593 256.511 50.2646 256.003 51.0752  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
325.000 35.0000 m
325.000 39.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
332.980 55.3378 m
332.980 56.3779 l
331.647 56.3779 l
331.647 59.0000 l
330.438 59.0000 l
330.438 56.3779 l
326.234 56.3779 l
326.234 55.4404 l
330.841 48.8632 l
331.647 48.8632 l
331.647 55.3378 l
h
330.438 55.3378 m
330.438 50.4086 l
326.952 55.3378 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
78.0000 35.0000 m
78.0000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
149.000 35.0000 m
149.000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
220.000 35.0000 m
220.000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
290.000 35.0000 m
290.000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
361.000 35.0000 m
361.000 37.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
43.0000 388.000 m
43.0000 1.00000 l
S
Q
0 J
1 j
q
q
0 w
newpath
43.0000 370.000 m
39.0000 370.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 368 9 16 rc
newpath
18.4531 376.890 m
8.54687 376.890 l
8.54687 376.109 l
18.4531 376.109 l
18.4531 376.890 l
h
f
Q
newpath
18.7578 372.042 m
21.1748 370.863 l
21.4165 370.863 l
21.4165 379.249 l
21.4165 379.806 21.4397 380.152 21.4860 380.289  c
21.5324 380.426 21.6289 380.531 21.7753 380.604  c
21.9218 380.677 22.2197 380.719 22.6689 380.729  c
22.6689 381.000 l
18.9335 381.000 l
18.9335 380.729 l
19.4023 380.719 19.7050 380.679 19.8418 380.608  c
19.9785 380.537 20.0737 380.442 20.1274 380.322  c
20.1811 380.202 20.2080 379.845 20.2080 379.249  c
20.2080 373.888 l
20.2080 373.165 20.1835 372.701 20.1347 372.496  c
20.1005 372.340 20.0383 372.225 19.9480 372.152  c
19.8576 372.079 19.7490 372.042 19.6220 372.042  c
19.4414 372.042 19.1899 372.118 18.8676 372.269  c
h
25.5419 376.092 m
25.5419 374.960 25.7128 373.984 26.0546 373.166  c
26.3964 372.348 26.8505 371.739 27.4169 371.339  c
27.8564 371.022 28.3105 370.863 28.7793 370.863  c
29.5410 370.863 30.2246 371.251 30.8300 372.027  c
31.5869 372.989 31.9653 374.293 31.9653 375.939  c
31.9653 377.091 31.7993 378.070 31.4672 378.876  c
31.1352 379.681 30.7116 380.266 30.1965 380.630  c
29.6814 380.993 29.1845 381.175 28.7060 381.175  c
27.7587 381.175 26.9702 380.616 26.3403 379.498  c
25.8081 378.556 25.5419 377.420 25.5419 376.092  c
h
26.9775 376.275 m
26.9775 377.643 27.1460 378.758 27.4829 379.623  c
27.7612 380.350 28.1762 380.714 28.7280 380.714  c
28.9917 380.714 29.2651 380.595 29.5483 380.359  c
29.8315 380.122 30.0463 379.725 30.1928 379.168  c
30.4174 378.329 30.5297 377.145 30.5297 375.616  c
30.5297 374.483 30.4126 373.539 30.1782 372.782  c
30.0024 372.220 29.7753 371.822 29.4970 371.588  c
29.2968 371.427 29.0551 371.346 28.7719 371.346  c
28.4399 371.346 28.1445 371.495 27.8857 371.793  c
27.5341 372.198 27.2949 372.835 27.1679 373.705  c
27.0410 374.574 26.9775 375.431 26.9775 376.275  c
h
33.5419 376.092 m
33.5419 374.960 33.7128 373.984 34.0546 373.166  c
34.3964 372.348 34.8505 371.739 35.4169 371.339  c
35.8564 371.022 36.3105 370.863 36.7793 370.863  c
37.5410 370.863 38.2246 371.251 38.8300 372.027  c
39.5869 372.989 39.9653 374.293 39.9653 375.939  c
39.9653 377.091 39.7993 378.070 39.4672 378.876  c
39.1352 379.681 38.7116 380.266 38.1965 380.630  c
37.6814 380.993 37.1845 381.175 36.7060 381.175  c
35.7587 381.175 34.9702 380.616 34.3403 379.498  c
33.8081 378.556 33.5419 377.420 33.5419 376.092  c
h
34.9775 376.275 m
34.9775 377.643 35.1460 378.758 35.4829 379.623  c
35.7612 380.350 36.1762 380.714 36.7280 380.714  c
36.9917 380.714 37.2651 380.595 37.5483 380.359  c
37.8315 380.122 38.0463 379.725 38.1928 379.168  c
38.4174 378.329 38.5297 377.145 38.5297 375.616  c
38.5297 374.483 38.4126 373.539 38.1782 372.782  c
38.0024 372.220 37.7753 371.822 37.4970 371.588  c
37.2968 371.427 37.0551 371.346 36.7719 371.346  c
36.4399 371.346 36.1445 371.495 35.8857 371.793  c
35.5341 372.198 35.2949 372.835 35.1679 373.705  c
35.0410 374.574 34.9775 375.431 34.9775 376.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 303.000 m
39.0000 303.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
14 301 9 16 rc
newpath
26.4531 309.890 m
16.5468 309.890 l
16.5468 309.109 l
26.4531 309.109 l
26.4531 309.890 l
h
f
Q
newpath
27.8784 308.997 m
27.0922 308.353 26.5856 307.835 26.3586 307.444  c
26.1315 307.054 26.0180 306.648 26.0180 306.229  c
26.0180 305.584 26.2670 305.029 26.7651 304.562  c
27.2631 304.096 27.9248 303.863 28.7500 303.863  c
29.5507 303.863 30.1953 304.080 30.6835 304.515  c
31.1718 304.949 31.4160 305.445 31.4160 306.002  c
31.4160 306.373 31.2841 306.751 31.0205 307.137  c
30.7568 307.522 30.2075 307.977 29.3725 308.499  c
30.2319 309.163 30.8007 309.686 31.0791 310.066  c
31.4502 310.564 31.6357 311.089 31.6357 311.641  c
31.6357 312.339 31.3696 312.936 30.8374 313.432  c
30.3051 313.928 29.6069 314.175 28.7426 314.175  c
27.8002 314.175 27.0654 313.880 26.5380 313.289  c
26.1181 312.815 25.9082 312.298 25.9082 311.736  c
25.9082 311.297 26.0559 310.861 26.3513 310.429  c
26.6467 309.997 27.1557 309.520 27.8784 308.997  c
h
29.0283 308.213 m
29.6142 307.686 29.9853 307.270 30.1416 306.965  c
30.2978 306.659 30.3759 306.314 30.3759 305.928  c
30.3759 305.416 30.2319 305.014 29.9438 304.723  c
29.6557 304.433 29.2627 304.288 28.7646 304.288  c
28.2666 304.288 27.8613 304.432 27.5488 304.720  c
27.2363 305.008 27.0800 305.345 27.0800 305.731  c
27.0800 305.984 27.1447 306.238 27.2741 306.492  c
27.4035 306.746 27.5878 306.988 27.8271 307.217  c
h
28.2226 309.275 m
27.8173 309.617 27.5170 309.990 27.3217 310.392  c
27.1264 310.795 27.0288 311.231 27.0288 311.700  c
27.0288 312.330 27.2009 312.834 27.5451 313.212  c
27.8894 313.591 28.3276 313.780 28.8598 313.780  c
29.3872 313.780 29.8095 313.631 30.1269 313.333  c
30.4443 313.035 30.6030 312.674 30.6030 312.249  c
30.6030 311.897 30.5102 311.583 30.3247 311.304  c
29.9780 310.787 29.2773 310.110 28.2226 309.275  c
h
33.5419 309.092 m
33.5419 307.960 33.7128 306.984 34.0546 306.166  c
34.3964 305.348 34.8505 304.739 35.4169 304.339  c
35.8564 304.022 36.3105 303.863 36.7793 303.863  c
37.5410 303.863 38.2246 304.251 38.8300 305.027  c
39.5869 305.989 39.9653 307.293 39.9653 308.939  c
39.9653 310.091 39.7993 311.070 39.4672 311.876  c
39.1352 312.681 38.7116 313.266 38.1965 313.630  c
37.6814 313.993 37.1845 314.175 36.7060 314.175  c
35.7587 314.175 34.9702 313.616 34.3403 312.498  c
33.8081 311.556 33.5419 310.420 33.5419 309.092  c
h
34.9775 309.275 m
34.9775 310.643 35.1460 311.758 35.4829 312.623  c
35.7612 313.350 36.1762 313.714 36.7280 313.714  c
36.9917 313.714 37.2651 313.595 37.5483 313.359  c
37.8315 313.122 38.0463 312.725 38.1928 312.168  c
38.4174 311.329 38.5297 310.145 38.5297 308.616  c
38.5297 307.483 38.4126 306.539 38.1782 305.782  c
38.0024 305.220 37.7753 304.822 37.4970 304.588  c
37.2968 304.427 37.0551 304.346 36.7719 304.346  c
36.4399 304.346 36.1445 304.495 35.8857 304.793  c
35.5341 305.198 35.2949 305.835 35.1679 306.705  c
35.0410 307.574 34.9775 308.431 34.9775 309.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 236.000 m
39.0000 236.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
14 234 9 16 rc
newpath
26.4531 242.890 m
16.5468 242.890 l
16.5468 242.109 l
26.4531 242.109 l
26.4531 242.890 l
h
f
Q
newpath
31.7236 236.863 m
31.7236 237.134 l
31.0791 237.197 30.5529 237.325 30.1452 237.518  c
29.7375 237.711 29.3347 238.005 28.9367 238.401  c
28.5388 238.796 28.2092 239.237 27.9480 239.723  c
27.6867 240.209 27.4682 240.786 27.2924 241.455  c
27.9956 240.972 28.7011 240.730 29.4091 240.730  c
30.0878 240.730 30.6762 241.003 31.1743 241.550  c
31.6723 242.097 31.9213 242.800 31.9213 243.660  c
31.9213 244.490 31.6699 245.247 31.1669 245.930  c
30.5615 246.760 29.7607 247.175 28.7646 247.175  c
28.0859 247.175 27.5097 246.951 27.0361 246.502  c
26.1084 245.627 25.6445 244.495 25.6445 243.103  c
25.6445 242.214 25.8227 241.370 26.1792 240.569  c
26.5356 239.768 27.0446 239.058 27.7063 238.438  c
28.3679 237.817 29.0014 237.400 29.6069 237.185  c
30.2124 236.970 30.7763 236.863 31.2988 236.863  c
h
27.1679 241.990 m
27.0800 242.649 27.0361 243.181 27.0361 243.586  c
27.0361 244.055 27.1228 244.564 27.2961 245.114  c
27.4694 245.663 27.7270 246.099 28.0688 246.421  c
28.3178 246.650 28.6206 246.765 28.9770 246.765  c
29.4018 246.765 29.7814 246.565 30.1159 246.165  c
30.4504 245.764 30.6176 245.193 30.6176 244.451  c
30.6176 243.616 30.4516 242.893 30.1196 242.283  c
29.7876 241.672 29.3164 241.367 28.7060 241.367  c
28.5205 241.367 28.3215 241.406 28.1091 241.484  c
27.8967 241.563 27.5830 241.731 27.1679 241.990  c
h
33.5419 242.092 m
33.5419 240.960 33.7128 239.984 34.0546 239.166  c
34.3964 238.348 34.8505 237.739 35.4169 237.339  c
35.8564 237.022 36.3105 236.863 36.7793 236.863  c
37.5410 236.863 38.2246 237.251 38.8300 238.027  c
39.5869 238.989 39.9653 240.293 39.9653 241.939  c
39.9653 243.091 39.7993 244.070 39.4672 244.876  c
39.1352 245.681 38.7116 246.266 38.1965 246.630  c
37.6814 246.993 37.1845 247.175 36.7060 247.175  c
35.7587 247.175 34.9702 246.616 34.3403 245.498  c
33.8081 244.556 33.5419 243.420 33.5419 242.092  c
h
34.9775 242.275 m
34.9775 243.643 35.1460 244.758 35.4829 245.623  c
35.7612 246.350 36.1762 246.714 36.7280 246.714  c
36.9917 246.714 37.2651 246.595 37.5483 246.359  c
37.8315 246.122 38.0463 245.725 38.1928 245.168  c
38.4174 244.329 38.5297 243.145 38.5297 241.616  c
38.5297 240.483 38.4126 239.539 38.1782 238.782  c
38.0024 238.220 37.7753 237.822 37.4970 237.588  c
37.2968 237.427 37.0551 237.346 36.7719 237.346  c
36.4399 237.346 36.1445 237.495 35.8857 237.793  c
35.5341 238.198 35.2949 238.835 35.1679 239.705  c
35.0410 240.574 34.9775 241.431 34.9775 242.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 169.000 m
39.0000 169.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
14 166 9 16 rc
newpath
26.4531 174.890 m
16.5468 174.890 l
16.5468 174.109 l
26.4531 174.109 l
26.4531 174.890 l
h
f
Q
newpath
31.9799 175.337 m
31.9799 176.377 l
30.6469 176.377 l
30.6469 179.000 l
29.4384 179.000 l
29.4384 176.377 l
25.2343 176.377 l
25.2343 175.440 l
29.8413 168.863 l
30.6469 168.863 l
30.6469 175.337 l
h
29.4384 175.337 m
29.4384 170.408 l
25.9521 175.337 l
h
33.5419 174.092 m
33.5419 172.960 33.7128 171.984 34.0546 171.166  c
34.3964 170.348 34.8505 169.739 35.4169 169.339  c
35.8564 169.022 36.3105 168.863 36.7793 168.863  c
37.5410 168.863 38.2246 169.251 38.8300 170.027  c
39.5869 170.989 39.9653 172.293 39.9653 173.939  c
39.9653 175.091 39.7993 176.070 39.4672 176.876  c
39.1352 177.681 38.7116 178.266 38.1965 178.630  c
37.6814 178.993 37.1845 179.175 36.7060 179.175  c
35.7587 179.175 34.9702 178.616 34.3403 177.498  c
33.8081 176.556 33.5419 175.420 33.5419 174.092  c
h
34.9775 174.275 m
34.9775 175.643 35.1460 176.758 35.4829 177.623  c
35.7612 178.350 36.1762 178.714 36.7280 178.714  c
36.9917 178.714 37.2651 178.595 37.5483 178.359  c
37.8315 178.122 38.0463 177.725 38.1928 177.168  c
38.4174 176.329 38.5297 175.145 38.5297 173.616  c
38.5297 172.483 38.4126 171.539 38.1782 170.782  c
38.0024 170.220 37.7753 169.822 37.4970 169.588  c
37.2968 169.427 37.0551 169.346 36.7719 169.346  c
36.4399 169.346 36.1445 169.495 35.8857 169.793  c
35.5341 170.198 35.2949 170.835 35.1679 171.705  c
35.0410 172.574 34.9775 173.431 34.9775 174.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 102.000 m
39.0000 102.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
14 99 9 16 rc
newpath
26.4531 107.890 m
16.5468 107.890 l
16.5468 107.109 l
26.4531 107.109 l
26.4531 107.890 l
h
f
Q
newpath
31.8774 110.088 m
31.1816 112.000 l
25.3222 112.000 l
25.3222 111.729 l
27.0459 110.156 28.2592 108.872 28.9624 107.876  c
29.6655 106.880 30.0170 105.969 30.0170 105.144  c
30.0170 104.514 29.8242 103.997 29.4384 103.591  c
29.0527 103.186 28.5913 102.983 28.0542 102.983  c
27.5659 102.983 27.1276 103.126 26.7395 103.412  c
26.3513 103.698 26.0644 104.116 25.8789 104.668  c
25.6079 104.668 l
25.7299 103.765 26.0437 103.071 26.5490 102.588  c
27.0544 102.105 27.6855 101.863 28.4423 101.863  c
29.2480 101.863 29.9206 102.122 30.4602 102.639  c
30.9997 103.157 31.2695 103.767 31.2695 104.470  c
31.2695 104.973 31.1523 105.476 30.9179 105.979  c
30.5566 106.770 29.9707 107.607 29.1601 108.491  c
27.9443 109.819 27.1850 110.620 26.8823 110.894  c
29.4751 110.894 l
30.0024 110.894 30.3723 110.874 30.5847 110.835  c
30.7971 110.796 30.9887 110.717 31.1596 110.597  c
31.3305 110.477 31.4794 110.308 31.6064 110.088  c
h
33.5419 107.092 m
33.5419 105.960 33.7128 104.984 34.0546 104.166  c
34.3964 103.348 34.8505 102.739 35.4169 102.339  c
35.8564 102.022 36.3105 101.863 36.7793 101.863  c
37.5410 101.863 38.2246 102.251 38.8300 103.027  c
39.5869 103.989 39.9653 105.293 39.9653 106.939  c
39.9653 108.091 39.7993 109.070 39.4672 109.876  c
39.1352 110.681 38.7116 111.266 38.1965 111.630  c
37.6814 111.993 37.1845 112.175 36.7060 112.175  c
35.7587 112.175 34.9702 111.616 34.3403 110.498  c
33.8081 109.556 33.5419 108.420 33.5419 107.092  c
h
34.9775 107.275 m
34.9775 108.643 35.1460 109.758 35.4829 110.623  c
35.7612 111.350 36.1762 111.714 36.7280 111.714  c
36.9917 111.714 37.2651 111.595 37.5483 111.359  c
37.8315 111.122 38.0463 110.725 38.1928 110.168  c
38.4174 109.329 38.5297 108.145 38.5297 106.616  c
38.5297 105.483 38.4126 104.539 38.1782 103.782  c
38.0024 103.220 37.7753 102.822 37.4970 102.588  c
37.2968 102.427 37.0551 102.346 36.7719 102.346  c
36.4399 102.346 36.1445 102.495 35.8857 102.793  c
35.5341 103.198 35.2949 103.835 35.1679 104.705  c
35.0410 105.574 34.9775 106.431 34.9775 107.275  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 35.0000 m
39.0000 35.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.5419 40.0927 m
33.5419 38.9599 33.7128 37.9846 34.0546 37.1667  c
34.3964 36.3488 34.8505 35.7397 35.4169 35.3393  c
35.8564 35.0219 36.3105 34.8632 36.7793 34.8632  c
37.5410 34.8632 38.2246 35.2514 38.8300 36.0278  c
39.5869 36.9897 39.9653 38.2934 39.9653 39.9389  c
39.9653 41.0913 39.7993 42.0703 39.4672 42.8759  c
39.1352 43.6816 38.7116 44.2663 38.1965 44.6301  c
37.6814 44.9939 37.1845 45.1757 36.7060 45.1757  c
35.7587 45.1757 34.9702 44.6167 34.3403 43.4985  c
33.8081 42.5561 33.5419 41.4209 33.5419 40.0927  c
h
34.9775 40.2758 m
34.9775 41.6430 35.1460 42.7587 35.4829 43.6230  c
35.7612 44.3505 36.1762 44.7143 36.7280 44.7143  c
36.9917 44.7143 37.2651 44.5959 37.5483 44.3591  c
37.8315 44.1223 38.0463 43.7255 38.1928 43.1689  c
38.4174 42.3291 38.5297 41.1450 38.5297 39.6167  c
38.5297 38.4838 38.4126 37.5390 38.1782 36.7822  c
38.0024 36.2207 37.7753 35.8227 37.4970 35.5883  c
37.2968 35.4272 37.0551 35.3466 36.7719 35.3466  c
36.4399 35.3466 36.1445 35.4956 35.8857 35.7934  c
35.5341 36.1987 35.2949 36.8359 35.1679 37.7050  c
35.0410 38.5742 34.9775 39.4311 34.9775 40.2758  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 337.000 m
41.0000 337.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 270.000 m
41.0000 270.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 202.000 m
41.0000 202.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 135.000 m
41.0000 135.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 68.0000 m
41.0000 68.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
43.0000 1.00000 m
41.0000 1.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
